# Origin Repository:  loopyd/ecs-saber
#
# Copyright: (C) 2022 by Robert Smith <nightwintertooth@gmail.com>
# Licensed under:  DBAD License -> https://dbad-license.org/
# 
# I made efforts to make this modular so you could reuse it (and so can I)
#
# The way I have structured it is by using branches to keep docsfx and
# gh-pages isolated on they own branches so your master/main repo is very
# neat and orderly.  gh-pages is completely wiped, there is no need to
# manage it anymore thanks to docsfx static content generator.
#
# As this thing's an effective drop in replacement for Jekyll for
# github pages, toss me some spare dev cash if you like it:
#
#   https://www.paypal.com/paypalme/snowflowerwolf
#
# Or choose not to donate, just "Don't Be A Dick" - The Buddah.

name: Reusable DocFX build workflow

on:
  workflow_call:
    inputs:
      build_docs:
        required: true
        type: boolean
      build_configuration:
        required: true
        type: string
      library_name:
        required: true
        type: string
      library_sdk_version:
        required: false
        type: string
      src_branch:
        required: true
        type: string
      docsfx_branch:
        required: false
        type: string

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Clone ${{ inputs.src_branch }} branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.src_branch }}
        if: ${{ inputs.build_docs == false }}

      - name: Clone DocsFX branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.docsfx_branch }}
        if: ${{ inputs.build_docs == true }}

      - name: Set up .NET SDK for build library
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.library_sdk_version }}
        if: ${{ inputs.build_docs == false }}

      - name: Set up .NET SDK for build docs
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
        if: ${{ inputs.build_docs == true }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Build library
        run: |
          dotnet restore
          dotnet build --configuration ${{ inputs.build_configuration }}
          dotnet publish -c ${{ env.CONFIGURATION }} -o ${{ env.DOTNET_ROOT }}/myapp
        shell: bash
        if: ${{ inputs.build_docs == false }}

      - name: Build docs
        run: |
          chmod +x ./build.sh
          ./build.sh "${{ inputs.build_configuration }}" "${{ inputs.src_branch }}"
        shell: bash
        if: ${{ inputs.build_docs == true }}
  
      - name: Upload Release artifacts for deployment workflow
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.library_name }}
          path: |
            ${{env.DOTNET_ROOT}}/myapp/${{ inputs.library_name }}.dll
        if: ${{ inputs.build_configuration == 'Release' && inputs.build_docs == false }}

      - name: Upload Debug artifacts for deployment workflow
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.library_name }}
          path: |
            ${{env.DOTNET_ROOT}}/myapp/*.dll
            ${{env.DOTNET_ROOT}}/myapp/*.so
            ${{env.DOTNET_ROOT}}/myapp/*.lib
            ${{env.DOTNET_ROOT}}/myapp/*.deps
            ${{env.DOTNET_ROOT}}/myapp/*.pdb
        if: ${{ inputs.build_configuration == 'Debug' && inputs.build_docs == false }}
      
      - name: Upload docs artifacts for deployment workflow
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.library_name }}-docs
          path: docs
        if: ${{ inputs.build_docs == true }}
